const fs = require("fs");
const ggbgfx = require("../index");
const {
  mergeTileLookups,
  imageToTilesString,
  imageToSpriteString,
  imagesToTilesetImage,
  imageAndTilesetToTilemap
} = ggbgfx;

test("test.png to output correct tiles string", () => {
  return expect(imageToTilesString(__dirname + "/data/test.png")).resolves.toBe(
    "0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x3C,0x00,0x66,0x18,0xC3,0x3C,0xBD,0x7E,0x7E,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF"
  );
});

test("merge multiple lookups", () => {
  return expect(
    mergeTileLookups([
      {
        "0x00": 0,
        "0x01": 1
      },
      {
        "0x01": 0,
        "0x02": 1,
        "0x00": 2
      }
    ])
  ).toEqual({
    "0x00": 0,
    "0x01": 1,
    "0x02": 2
  });
});

test("merge multiple images into tileset", () => {
  const images = [__dirname + "/data/test2.png", __dirname + "/data/test1.png"];
  const expectedOutput = fs.readFileSync(__dirname + "/data/tileset1.png");
  return expect(
    imagesToTilesetImage(images, __dirname + "/output/tileset1.png")
  ).resolves.toEqual(expectedOutput);
});

test("using source image and tileset build tilemap", () => {
  return expect(
    imageAndTilesetToTilemap(
      __dirname + "/data/test1.png",
      __dirname + "/data/tileset1.png"
    )
  ).resolves.toBe(
    "0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x02,0x02,0x02,0x02,0x03,0x03,0x03,0x03"
  );
});

test("building tilemap with tile offset", () => {
  return expect(
    imageAndTilesetToTilemap(
      __dirname + "/data/test1.png",
      __dirname + "/data/tileset1.png",
      16
    )
  ).resolves.toBe(
    "0x10,0x10,0x10,0x10,0x10,0x10,0x14,0x10,0x12,0x12,0x12,0x12,0x13,0x13,0x13,0x13"
  );
});

test("using source image output sprite data", () => {
  return expect(
    imageToSpriteString(__dirname + "/data/sprites.png")
  ).resolves.toBe(
    "0x03,0x03,0x3F,0x3F,0x07,0x05,0x07,0x07,0x03,0x03,0x1F,0x1F,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x17,0x14,0x14,0x14,0x14,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xC0,0xC0,0xFC,0xFC,0xE0,0xA0,0xE0,0xE0,0xC0,0xC0,0xF8,0xF8,0xE8,0xE8,0xE8,0xE8,0xE8,0xE8,0xE8,0xE8,0x28,0x28,0x28,0x28,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x03,0x03,0x3F,0x3F,0x07,0x07,0x07,0x07,0x03,0x03,0x17,0x17,0x1F,0x1F,0x27,0x27,0x27,0x27,0x47,0x47,0x08,0x08,0x08,0x08,0x10,0x10,0x10,0x10,0x20,0x20,0x18,0x18,0xC0,0xC0,0xFC,0xFC,0xE0,0xA0,0xE0,0xE0,0xC0,0xC0,0xE0,0xE0,0xE2,0xE2,0xE4,0xE4,0xF8,0xF8,0xE0,0xE0,0x30,0x30,0x0C,0x0C,0x04,0x04,0x08,0x08,0x0C,0x0C,0x00,0x00,0x03,0x03,0x3F,0x3F,0x07,0x07,0x07,0x07,0x03,0x03,0x07,0x07,0x07,0x07,0x2F,0x2F,0x1F,0x1F,0x07,0x07,0x01,0x01,0x01,0x01,0x01,0x01,0x02,0x02,0x04,0x04,0x07,0x07,0xC0,0xC0,0xFC,0xFC,0xE0,0xA0,0xE0,0xE0,0xC0,0xC0,0xE0,0xE0,0xE0,0xE0,0xF4,0xF4,0xE8,0xE8,0xE0,0xE0,0x80,0x80,0x80,0x80,0x40,0x40,0x40,0x40,0x80,0x80,0xC0,0xC0,0x03,0x03,0x3F,0x3F,0x07,0x05,0x07,0x07,0x03,0x03,0x1F,0x1F,0x17,0x17,0x0F,0x0F,0x0F,0x0F,0x07,0x07,0x0C,0x0C,0x08,0x08,0x04,0x04,0x0C,0x0C,0x18,0x18,0x00,0x00,0xC0,0xC0,0xFC,0xFC,0xE0,0xA0,0xE0,0xE0,0xC0,0xC0,0xF8,0xF8,0xE8,0xE8,0xE4,0xE4,0xE4,0xE4,0xE2,0xE2,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x03,0x03,0x3F,0x3F,0x07,0x05,0x07,0x07,0x03,0x03,0x1F,0x1F,0x17,0x17,0x27,0x27,0x27,0x27,0x47,0x47,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xC0,0xC0,0xFC,0xFC,0xE0,0xA0,0xE0,0xE0,0xC0,0xC0,0xF8,0xF8,0xE8,0xE8,0xF0,0xF0,0xF0,0xF0,0xE0,0xE0,0x30,0x30,0x10,0x10,0x20,0x20,0x30,0x30,0x18,0x18,0x00,0x00,0x03,0x03,0x3F,0x3F,0x07,0x07,0x07,0x07,0x03,0x03,0x1F,0x1F,0x17,0x17,0x27,0x27,0x27,0x27,0x47,0x47,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xC0,0xC0,0xFC,0xFC,0xE0,0xE0,0xE0,0xE0,0xC0,0xC0,0xF8,0xF8,0xE8,0xE8,0xF0,0xF0,0xF0,0xF0,0xE0,0xE0,0x30,0x30,0x10,0x10,0x20,0x20,0x30,0x30,0x18,0x18,0x00,0x00,0x03,0x03,0x3F,0x3F,0x07,0x07,0x07,0x07,0x03,0x03,0x1F,0x1F,0x17,0x17,0x0F,0x0F,0x0F,0x0F,0x07,0x07,0x0C,0x0C,0x08,0x08,0x04,0x04,0x0C,0x0C,0x18,0x18,0x00,0x00,0xC0,0xC0,0xFC,0xFC,0xE0,0xE0,0xE0,0xE0,0xC0,0xC0,0xF8,0xF8,0xE8,0xE8,0xE4,0xE4,0xE4,0xE4,0xE2,0xE2,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20"
  );
});
